(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{669:function(e,v,_){"use strict";_.r(v);var u=_(4),o=Object(u.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("Spring Cloud Zuul 是 Spring Cloud Netflix 子项目的核心组件之一，可以作微服务架构中的 API 网关使用， 支持"),_("code",[e._v("动态路由")]),e._v("与"),_("code",[e._v("过滤")]),e._v("功能。")]),e._v(" "),_("p",[e._v("API 网关为微服务架构中的服务提供了统一的访问入口，客户端通过 API 网关访问相关服务。\nAPI 网关的定义类似于设计模式中的"),_("code",[e._v("门面模式")]),e._v("， 它相当于整个微服务架构中的门面，所有客户端的访问都通过他来进行路由及过滤。\n它实现了"),_("code",[e._v("请求路由")]),e._v("、"),_("code",[e._v("负载均衡")]),e._v("、"),_("code",[e._v("校验过滤")]),e._v("、"),_("code",[e._v("服务容错")]),e._v("、"),_("code",[e._v("服务聚合")]),e._v("等功能。")]),e._v(" "),_("p",[e._v("Zuul 包含了对请求的"),_("code",[e._v("路由")]),e._v("和"),_("code",[e._v("过滤")]),e._v("两个最主要的功能：")]),e._v(" "),_("p",[e._v("其中路由功能负责将外部请求转发到具体的微服务实例上，是实现外部访问统一入口的基础，而过滤功能\n则负责对请求的处理过程进行干预，是实现请求校验、服务聚合等功能的基础。\nZuul 和 Eureka 进行整合，将 Zuul 自身注册为 Eureka 服务治理下的应用，同时从 Eureka 中获取其他微服务的消息，\n即访问微服务都是通过 Zuul 跳转后获得。")])])}),[],!1,null,null,null);v.default=o.exports}}]);