(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{676:function(v,_,r){"use strict";r.r(_);var e=r(4),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,r=v._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[r("h2",{attrs:{id:"docker-介绍"}},[v._v("Docker 介绍")]),v._v(" "),r("p",[v._v("Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。")]),v._v(" "),r("p",[v._v("Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。")]),v._v(" "),r("p",[v._v("容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。")]),v._v(" "),r("p",[v._v("Docker 自开源后受到广泛的关注和讨论，以至于 dotCloud 公司后来都改名为 Docker Inc。Redhat 已经在其 RHEL6.5 中集中支持 Docker；Google 也在其 PaaS 产品中广泛应用。")]),v._v(" "),r("p",[v._v("Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。Docker 的基础是 Linux 容器（LXC）等技术。")]),v._v(" "),r("p",[v._v("在 LXC 的基础上 Docker 进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。")]),v._v(" "),r("p",[v._v("下面的图片比较了 Docker 和传统虚拟化方式的不同之处，可见容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统方式则是在硬件层面实现。")]),v._v(" "),r("img",{attrs:{src:v.$withBase("/img/server/docker/virtualMachines.png"),alt:"virtualMachines.png"}}),v._v(" "),r("img",{attrs:{src:v.$withBase("/img/server/docker/docker.png"),alt:"docker.png"}}),v._v(" "),r("h2",{attrs:{id:"docker-的应用场景"}},[v._v("Docker 的应用场景")]),v._v(" "),r("ul",[r("li",[v._v("Web 应用的自动化打包和发布；")]),v._v(" "),r("li",[v._v("自动化测试和持续继承、发布；")]),v._v(" "),r("li",[v._v("在服务环境中部署和调整数据库或者其他的后台应用；")]),v._v(" "),r("li",[v._v("从头编译或者扩展有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。")])]),v._v(" "),r("h2",{attrs:{id:"docker-的优点"}},[v._v("Docker 的优点")]),v._v(" "),r("p",[v._v("Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。")]),v._v(" "),r("h3",{attrs:{id:"_1、快速-一致地交付您的应用程序"}},[v._v("1、快速，一致地交付您的应用程序")]),v._v(" "),r("p",[v._v("Docker 允许开发人员使用您提供的应用程序或服务的本地容器在标准化环境中工作，从而简化了开发的生命周期。")]),v._v(" "),r("p",[v._v("容器非常适合 "),r("strong",[v._v("持续集成")]),v._v(" 和 "),r("strong",[v._v("持续交付")]),v._v("（CI / CD）工作流程，请考虑以下示例方案：")]),v._v(" "),r("ul",[r("li",[v._v("您的开发人员在本地编写代码，并使用 Docker 容器与同事共享他们的工作。")]),v._v(" "),r("li",[v._v("他们使用 Docker 将其应用程序推送到测试环境中，并执行自动或手动测试。")]),v._v(" "),r("li",[v._v("当开发人员发现错误时，他们可以在开发环境中对其进行修复，然后将其重新部署到测试环境中，以进行测试和验证。")]),v._v(" "),r("li",[v._v("测试完成后，将修补程序推送给生产环境，就像将更新的镜像推送到生产环境一样简单。")])]),v._v(" "),r("h3",{attrs:{id:"_2、响应式部署和扩展"}},[v._v("2、响应式部署和扩展")]),v._v(" "),r("p",[v._v("Docker 是基于容器的平台，允许高度可移植的工作负载。Docker 容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。")]),v._v(" "),r("p",[v._v("Docker 的可移植性和轻量级的特性，还可以使您轻松地完成动态管理的工作负担，并根据业务需求指示，实时扩展或拆除应用程序和服务。")]),v._v(" "),r("h3",{attrs:{id:"_3、在同一硬件上运行更多工作负载"}},[v._v("3、在同一硬件上运行更多工作负载")]),v._v(" "),r("p",[v._v("Docker 轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此您可以利用更多的计算能力来实现业务目标。Docker 非常适合于高密度环境以及中小型部署，而您可以用更少的资源做更多的事情。")])])}),[],!1,null,null,null);_.default=o.exports}}]);